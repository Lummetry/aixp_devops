# User sections:
# 1. all-hosts values such as .env information or mqtt broker information
# 2. worker connection information
#
all:
  vars:
    #######################################################
    ###### USER SECTION #1 ! MODIFY THE VALUES BELOW ######
    #######################################################

    # use either ansible_ssh_private_key_file or ansible_ssh_pass
    ansible_user: ""                            # the user to connect to the remote host    
    ansible_ssh_private_key_file: "./key.pem"   # the path to the private key file
    # ansible_ssh_pass: ""                        # the password to connect to the remote host if no private key is used
    ansible_sudo_pass: ""                       # the password to become root on the remote host if required

    # select the target environment "staging" "qa" "preprod" "prod"
    aixp_app_target: "staging"  # "staging" "qa" "preprod" "prod" or even "develop"
    aixp_dev_mode: false

    aixp_hosts: |
      A.B.C.D host.name.domain
      # A.B.C.D host.name.domain      

    # START Container registry      
    # define below the full url to be used for the image
    aixp_image: exe_eng
    aixp_cr_server: docker.io                       # registry.apps.proiectai.bt.wan
    aixp_cr_accept_insecure: false                  # accept insecure connection (true/false)    
    aixp_docker_pull_limit: 5                       #  limit the docker pull to a certain number of threads
    aixp_cr_user: aixpand                           # hyfy
    aixp_cr_url: "{{ aixp_cr_server }}/{{ aixp_cr_user }}"
    dockerhub_username: "dockerhub_username"        # dockerhub username
    dockerhub_password: "dockerhub_password"        # dockerhub password  
    aixp_lms_image: hyfy_lms                        # name of the LMS image 
    aixp_lms_enabled: false                         # enable LMS installation
    aixp_lms_pull: false                            # pull LMS image even in config-only
    # END Container registry

    # STRT values for the target environment .env    
    aixp_EE_MINIO_ENDPOINT: "minio_endpoint"      # minio endpoint such as s3.prod.org.com
    aixp_EE_MINIO_ACCESS_KEY: "minio_access_key"  # minio access key (username)
    aixp_EE_MINIO_SECRET_KEY: "minio_secret_key"  # minio secret key (password)
    aixp_EE_MINIO_SECURE: "true"                    # minio secure connection (true/false)
    aixp_EE_MINIO_MODEL_BUCKET: "model-zoo"         # minio model bucket
    aixp_EE_MINIO_UPLOAD_BUCKET: "TBD"            # minio default (not mandatory) upload bucket


    # enter below the values for the MQTT broker
    aixp_MQTT_HOST: "mqtt_broker_address"         # mqtt broker address such as mqtt.prod.org.com
    aixp_MQTT_USER: "coreaixp"                      # mqtt broker username (default coreaixp)
    aixp_EE_MQTT: "mqtt_broker_password"          # mqtt broker password (required)
    aixp_MQTT_PORT: 1883                            # mqtt broker port (default 1883 for non-secure)
    aixp_MQTT_SECURED: 1                        # mqtt broker secure connection (true/false)
    aixp_MQTT_TOPIC_ROOT: lummetry
    # write below instead of null the certificate for the 
    # MQTT broker such as /home/gts/emqx.crt or similar
    # aixp_MQTT_CERT: /home/gts/emqx.crt
    aixp_MQTT_CERT: null
  

    aixp_EE_GITVER: "git_version_access_token"    # git version access token (required)
    aixp_EE_OPENAI: "openai_api_key"              # optional openai api key
    aixp_EE_HF_TOKEN: "huggingface_api_token"     # optional huggingface api token

    aixp_NGROK_AUTH_TOKEN: "ngrok_auth_token"     # ngrok auth token
    aixp_NGROK_EDGE_LABEL: "ngrok_edge_label"     # ngrok edge label
    
    aixp_EE_SUPERVISOR: false

    # END .env

    ### Pipeline configuration secton
    aixp_UPDATE_MONITOR_START: "12:00"    # when to start update monitor for version check and updates - set this to 00:00 for Preventics
    aixp_UPDATE_MONITOR_END: "12:30"      # when to stop update monitor for version check and updates - set this to 00:30 for Preventics
    aixp_UPDATE_MONITOR_RESTART: 600000    # after how many seconds to perform maintenance force-restart (default 7 days)
    aixp_UPDATE_MONITOR_REBOOT_ON_RESTART: false # set this to true to reboot the machine
    # set above to 72000 in order to perform force-restart every cycle (for Preventics)
    ### End Pipeline configuration secton

    aixp_DEBUG_LOG_PAYLOADS: true # set this to false to stop logging payloads delivery in EE logs

    aixp_MAX_BATCH_FIRST_STAGE: 8 # set this to 16-32-64 for powerfull GPUs


    aixp_authorized_addrs: |
      aixp_back_end_address_00000000000000


    aixp_container_memory_limit: 30GB

    aixp_ADD_ORIGINAL_IMAGE: false  # add original image to payloads - must be false and should be modified by individual plugins

    ########################################################
    ###### END USER SECTION # MODIFY THE VALUES ABOVE ######
    ########################################################



    ###### ADMIN-ONLY VARIABLES ######

    aixp_container_folder: exe_eng # should be same as the image name

    aixp_EE_MQTT_SUBTOPIC: address

    aixp_device: "cuda:0"
    aixp_docker_gpus: "--gpus all"

    aixp_commented_restart: 

    aixp_system_temperature_check: true

    aixp_VERSION_URL: "https://raw.githubusercontent.com/Lummetry/HyFy-releases/main/e2/release.yaml"
    aixp_VERSION_USE_YAML: true


    # ssh options
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" 
    # select the app to deploy "aixp_ee", "llm_api" or other apps
    aixp_app: aixp_ee # either aixp_ee or edge_node
    aixp_debug_deploy: false
    # the default formatter
    aixp_formatter: "cavi2"
    # default target folder
    aixp_base_folder: "/var/cache/{{ aixp_app }}"
    # default local cache folder
    aixp_local_cache_folder: "{{ aixp_base_folder }}/_local_cache"
    # default app version for image pulling
    aixp_app_version: "{{ aixp_app_target }}"
    # default app port for web-api 
    aixp_app_port: "5050"
    # install extra apps such as Go, Python and packages such PyE2
    install_extra_packages: true
    # the name of the supervisor node
    aixp_supernode: "{{ 'stg_k8s_super' if aixp_app_target=='staging' else 'pre_super' if aixp_app_target=='preprod' else 'qa_super' if aixp_app_target=='qa' else 'prod_super' }}"
    # test the AiXp connection even from the localhost-to-AiXp beside the host-to-AiXp
    aixp_test_localhost: true
    aixp_port_forward: "{{ '-p 1883:1883' if aixp_dev_mode else '' }}"
    aixp_test_packages:
      - pye2
      - pika
      - paho
      - numpy
      - cryptography

    ###### END ADMIN-ONLY VARIABLES ######


  children:
    gpu_workers:
      hosts:
        ###########################################################
        ######   USER SECTION #2 - MODIFY THE VALUES BELOW   ######
        ###########################################################
        aixp_node_name_1:
          ansible_host: ""  
          aixp_jetson: false
          aixp_cpu_only: false

        # aixp_worker_2:
        #   ansible_host: ""  
        #   aixp_jetson: false
          # aixp_cpu_only: false

        ###########################################################
        ###### END USER SECTION #2 - MODIFY THE VALUES ABOVE ######
        ###########################################################

