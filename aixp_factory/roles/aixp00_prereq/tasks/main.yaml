---
####################################################################
#### localhost/control node tasks for environment setup/review  ####
####################################################################

- name: CONTROL NODE - Gather localhost facts
  setup:
  delegate_to: localhost
  when: inventory_hostname == groups['gpu_workers'][0]
  become: false

- name: CONTROL NODE - Get control node hostname and current directory
  ansible.builtin.shell:
    cmd: |
      hostname
      pwd
  register: control_node_info 
  delegate_to: localhost
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]

- name: CONTROL NODE - Show control node hostname and currend directory
  debug:
    var: control_node_info.stdout_lines
  delegate_to: localhost 
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]

- name: CONTROL NODE - Get control node factory version
  shell: ansible-galaxy collection list 'aidamian.aixp_factory'
  register: collection_version
  delegate_to: localhost
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]

- name: CONTROL NODE - Show control node factory version
  debug:
    var: collection_version.stdout_lines
  delegate_to: localhost 
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]


########################################################################
#### END localhost/control node tasks for environment setup/review  ####
########################################################################

# Actual startup of host tasks

- name: Initial log display
  debug:
    msg: "Running prereq tasks on {{ inventory_hostname }}: {{ ansible_host }}"

- name: Display host OS information
  debug:
    msg: "OS: {{ ansible_distribution }}, Version: {{ ansible_distribution_version }}, Release: {{ ansible_distribution_release }}"

- name: Get target host python version
  become: false
  shell: python3 --version
  register: python_version
  when: 
    - inventory_hostname in groups['gpu_workers']
    
- name: Parse version
  set_fact:
    target_py_major: "{{ python_version.stdout.split()[1].split('.')[0] }}"
    target_py_minor: "{{ python_version.stdout.split()[1].split('.')[1] }}"
    target_py_version: "{{ python_version.stdout.split()[1].split('.')[0] }}.{{ python_version.stdout.split()[1].split('.')[1] }}"
  become: false
  when: 
    - inventory_hostname in groups['gpu_workers']
    - python_version.stdout is defined


- name: Show python version
  debug:
    msg: "Target host has Python {{ target_py_version }} while control has {{ ansible_python.version.major }}.{{ ansible_python.version.minor }}"
  when: 
    - inventory_hostname in groups['gpu_workers']
    - target_py_version is defined

### Install pip

- name: Check pip version
  command: pip --version
  register: pip_version
  ignore_errors: true
  when: 
    - inventory_hostname in groups['gpu_workers']

- name: Parse pip version
  set_fact:
    pip_major: "{{ pip_version.stdout.split()[1].split('.')[0] }}"
    pip_minor: "{{ pip_version.stdout.split()[1].split('.')[1] }}"
  when: 
    - inventory_hostname in groups['gpu_workers']
    - pip_version.rc == 0

- name: Show pip version
  debug:
    msg: "Pip version: {{ pip_major }}.{{ pip_minor }}"
  when: 
    - inventory_hostname in groups['gpu_workers']
    - pip_version.rc == 0

- name: Determine if pip needs to be installed
  set_fact:
    pip_needs_install: true
  when:
    - inventory_hostname in groups['gpu_workers']
    - pip_version.rc != 0

- name: Determine if pip needs to be upgraded
  set_fact:
    pip_needs_update: "{{ pip_major | int < 23 }}"
  when: 
    - inventory_hostname in groups['gpu_workers']
    - pip_major is defined    

- name: Install pip using get-pip.py script
  ansible.builtin.shell:
    cmd: curl -sS https://bootstrap.pypa.io/get-pip.py | python3
  when: 
    - inventory_hostname in groups['gpu_workers']
    - (pip_needs_update | default(false)) or (pip_needs_install | default(false))

- name: Get pip version
  shell: pip --version
  register: pip_update_version
  become: false
  when: 
    - inventory_hostname in groups['gpu_workers']

- name: Show pip update version
  debug:
    msg: "{{ pip_update_version.stdout_lines }}"
  become: false
  when: 
    - inventory_hostname in groups['gpu_workers']

################### Install extra apps and packages ###################


### Install Snap & Go

- name: Check if Snap is installed
  command: which snap
  register: snap_installed
  failed_when: false
  changed_when: false

- name: Display if snap is installed or not
  debug:
    msg: "Snap is installed: {{ snap_installed.rc == 0 }}"

- name: Install Snap package
  package:
    name: snapd
    state: present
  when: snap_installed.rc != 0

- name: Install Go with Snap
  ansible.builtin.snap:
    name: go
    classic: yes
    channel: latest/stable
    state: present
  when: 
    # - inventory_hostname in groups['gpu_workers'] 
    - install_extra_packages | default(true) | bool

- name: Run go to get version
  shell: go version
  register: go_version
  when: 
    # - inventory_hostname == groups['gpu_workers'][0]
    - install_extra_packages | default(true) | bool

- name: Show go version
  debug:
    var: go_version.stdout_lines
  when: 
    # - inventory_hostname in groups['gpu_workers'] 
    - install_extra_packages | default(true) | bool

# End install go

################# End install extra apps and packages #################

# Create the base folder for the app

- name: "Check if {{ aixp_base_folder }} exists"
  ansible.builtin.stat:
    path: "{{ aixp_base_folder }}"
  register: aixp_base_folder_check

- name: "Create {{ aixp_base_folder }}"
  ansible.builtin.file:
    path: "{{ aixp_base_folder }}"
    state: directory
    mode: '0755'
  when: not aixp_base_folder_check.stat.exists  

- name: "Check if {{ aixp_base_folder }} has a README.md"
  ansible.builtin.stat:
    path: "{{ aixp_base_folder }}/README.md"
  register: aixp_base_folder_readme_check

- name: "Add a simple README.md in the {{ aixp_base_folder }}"
  ansible.builtin.copy:
    content: "# This folder is used to store the {{ aixp_app }} base config application.\n\n"
    dest: "{{ aixp_base_folder }}/README.md"
  when: not aixp_base_folder_readme_check.stat.exists
  