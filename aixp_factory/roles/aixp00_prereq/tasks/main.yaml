---
#################################################################
# localhost/control node tasks for environment setup/review
- name: Get control node hostname and currend directory
  ansible.builtin.shell:
    cmd: |
      hostname
      pwd
  register: control_node_info 
  delegate_to: localhost
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]

- name: Show control node hostname and currend directory
  debug:
    msg: "{{ control_node_info.stdout_lines }}"
  delegate_to: localhost 
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]

- name: Get control node factory version
  shell: ansible-galaxy collection list 'aidamian.aixp_factory'
  register: collection_version
  delegate_to: localhost
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]

- name: Show control node factory version
  debug:
    msg: "{{ collection_version.stdout_lines }}"
  delegate_to: localhost 
  become: false
  when: inventory_hostname == groups['gpu_workers'][0]


# end of localhost/control node tasks for environment setup/review
#################################################################

- name: Initial log display
  debug:
    msg: "Running prereq tasks on {{ inventory_hostname }}: {{ ansible_host }}"


- name: Display host OS information
  debug:
    msg: "OS: {{ ansible_distribution }}, Version: {{ ansible_distribution_version }}, Release: {{ ansible_distribution_release }}"


- name: Update package lists
  apt:
    update_cache: yes
    upgrade: yes


################### Install extra apps and packages ###################

### Install python3.10

- name: Show python version
  debug:
    msg: "Python {{ ansible_python.version }}"
  when: 
    # - inventory_hostname in groups['gpu_workers']
    - install_extra_packages | default(true) | bool

- name: Update, upgrade, and install Python 3.10
  block:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
        force_apt_get: yes

    - name: Add the Deadsnakes PPA
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        codename: "{{ ansible_distribution_release }}"
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Install Python 3.10
      ansible.builtin.apt:
        name: python3.10
        update_cache: yes
        state: present

    - name: Update python3 symlink to point to python3.10
      ansible.builtin.command:
        cmd: update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
  when: 
    # - inventory_hostname in groups['gpu_workers']
    - install_extra_packages | default(true) | bool
    - ansible_python.version.major == 3 and ansible_python.version.minor < 10        


- name: Get python version
  shell: python3 --version
  register: python_update_version
  become: false
  when: 
    - install_extra_packages | default(true) | bool
    - inventory_hostname in groups['gpu_workers']

- name: Show python update version
  debug:
    msg: "{{ python_update_version.stdout_lines }}"
  become: false
  when: 
    - install_extra_packages | default(true) | bool
    - inventory_hostname in groups['gpu_workers']

### Install pip

- name: Check pip version
  command: pip --version
  register: pip_version
  ignore_errors: true
  when: 
    - install_extra_packages | default(true) | bool

- name: Install pip using get-pip.py script
  ansible.builtin.shell:
    cmd: curl -sS https://bootstrap.pypa.io/get-pip.py | python3
  when: 
    - install_extra_packages | default(true) | bool
    - >  
      pip_version.stdout is not defined or 
      (pip_version.stdout is defined and pip_version.stdout.split()[1] is version('23', '<'))

- name: Get pip version
  shell: pip --version
  register: pip_update_version
  become: false
  when: 
    - install_extra_packages | default(true) | bool
    - inventory_hostname in groups['gpu_workers']

- name: Show pip update version
  debug:
    msg: "{{ pip_update_version.stdout_lines }}"
  become: false
  when: 
    - install_extra_packages | default(true) | bool
    - inventory_hostname in groups['gpu_workers']

### End install python3.10

### Install Go

- name: Install Go with Snap
  ansible.builtin.snap:
    name: go
    classic: yes
    channel: latest/stable
    state: present
  when: 
    # - inventory_hostname in groups['gpu_workers'] 
    - install_extra_packages | default(true) | bool

- name: Run go to get version
  shell: go version
  register: go_version
  when: 
    # - inventory_hostname == groups['gpu_workers'][0]
    - install_extra_packages | default(true) | bool

- name: Show go version
  debug:
    var: go_version.stdout_lines
  when: 
    # - inventory_hostname in groups['gpu_workers'] 
    - install_extra_packages | default(true) | bool

# End install go

################# End install extra apps and packages #################

# Create the base folder for the app

- name: "Check if {{ aixp_base_folder }} exists"
  ansible.builtin.stat:
    path: "{{ aixp_base_folder }}"
  register: aixp_base_folder_check

- name: "Create {{ aixp_base_folder }}"
  ansible.builtin.file:
    path: "{{ aixp_base_folder }}"
    state: directory
    mode: '0755'
  when: not aixp_base_folder_check.stat.exists  

- name: "Check if {{ aixp_base_folder }} has a README.md"
  ansible.builtin.stat:
    path: "{{ aixp_base_folder }}/README.md"
  register: aixp_base_folder_readme_check

- name: "Add a simple README.md in the {{ aixp_base_folder }}"
  ansible.builtin.copy:
    content: "# This folder is used to store the {{ aixp_app }} base config application.\n\n"
    dest: "{{ aixp_base_folder }}/README.md"
  when: not aixp_base_folder_readme_check.stat.exists
  